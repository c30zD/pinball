# Makefile.in generated by automake 1.11.1 from Makefile.am.
# test/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/pinball
pkgincludedir = $(includedir)/pinball
pkglibdir = $(libdir)/pinball
pkglibexecdir = $(libexecdir)/pinball
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i486-pc-linux-gnu
host_triplet = i486-pc-linux-gnu
target_triplet = i486-pc-linux-gnu
noinst_PROGRAMS = scale$(EXEEXT) simple$(EXEEXT) light$(EXEEXT) \
	texture$(EXEEXT) load$(EXEEXT) explode$(EXEEXT) \
	collision$(EXEEXT) signal$(EXEEXT) billboard$(EXEEXT) \
	font$(EXEEXT) thread$(EXEEXT) menu$(EXEEXT) joy$(EXEEXT) \
	sound$(EXEEXT) trans$(EXEEXT) math$(EXEEXT) misc$(EXEEXT) \
	varray$(EXEEXT) unittest$(EXEEXT)
subdir = test
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/pinconfig.h $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(testlibdir)"
LTLIBRARIES = $(testlib_LTLIBRARIES)
libModuleTest_la_LIBADD =
am_libModuleTest_la_OBJECTS = moduletest.lo
libModuleTest_la_OBJECTS = $(am_libModuleTest_la_OBJECTS)
libModuleTest_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libModuleTest_la_LDFLAGS) $(LDFLAGS) -o $@
PROGRAMS = $(noinst_PROGRAMS)
am_billboard_OBJECTS = billboard.$(OBJEXT)
billboard_OBJECTS = $(am_billboard_OBJECTS)
billboard_LDADD = $(LDADD)
billboard_DEPENDENCIES = ../src/libemilia_pin.a \
	../addon/libemilia_addon.a ../base/libemilia_base.a
am_collision_OBJECTS = collision.$(OBJEXT)
collision_OBJECTS = $(am_collision_OBJECTS)
collision_LDADD = $(LDADD)
collision_DEPENDENCIES = ../src/libemilia_pin.a \
	../addon/libemilia_addon.a ../base/libemilia_base.a
am_explode_OBJECTS = explode.$(OBJEXT)
explode_OBJECTS = $(am_explode_OBJECTS)
explode_LDADD = $(LDADD)
explode_DEPENDENCIES = ../src/libemilia_pin.a \
	../addon/libemilia_addon.a ../base/libemilia_base.a
am_font_OBJECTS = font.$(OBJEXT)
font_OBJECTS = $(am_font_OBJECTS)
font_LDADD = $(LDADD)
font_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
am_joy_OBJECTS = joy.$(OBJEXT)
joy_OBJECTS = $(am_joy_OBJECTS)
joy_LDADD = $(LDADD)
joy_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
am_light_OBJECTS = light.$(OBJEXT)
light_OBJECTS = $(am_light_OBJECTS)
light_LDADD = $(LDADD)
light_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
am_load_OBJECTS = load.$(OBJEXT)
load_OBJECTS = $(am_load_OBJECTS)
load_LDADD = $(LDADD)
load_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
load_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(load_LDFLAGS) $(LDFLAGS) -o $@
am_math_OBJECTS = math.$(OBJEXT)
math_OBJECTS = $(am_math_OBJECTS)
math_LDADD = $(LDADD)
math_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
am_menu_OBJECTS = menu.$(OBJEXT)
menu_OBJECTS = $(am_menu_OBJECTS)
menu_LDADD = $(LDADD)
menu_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
am_misc_OBJECTS = misc.$(OBJEXT)
misc_OBJECTS = $(am_misc_OBJECTS)
misc_LDADD = $(LDADD)
misc_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
am_scale_OBJECTS = scale.$(OBJEXT)
scale_OBJECTS = $(am_scale_OBJECTS)
scale_LDADD = $(LDADD)
scale_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
am_signal_OBJECTS = signal.$(OBJEXT)
signal_OBJECTS = $(am_signal_OBJECTS)
signal_LDADD = $(LDADD)
signal_DEPENDENCIES = ../src/libemilia_pin.a \
	../addon/libemilia_addon.a ../base/libemilia_base.a
am_simple_OBJECTS = simple.$(OBJEXT)
simple_OBJECTS = $(am_simple_OBJECTS)
simple_LDADD = $(LDADD)
simple_DEPENDENCIES = ../src/libemilia_pin.a \
	../addon/libemilia_addon.a ../base/libemilia_base.a
am_sound_OBJECTS = sound.$(OBJEXT)
sound_OBJECTS = $(am_sound_OBJECTS)
sound_LDADD = $(LDADD)
sound_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
am_texture_OBJECTS = texture.$(OBJEXT)
texture_OBJECTS = $(am_texture_OBJECTS)
texture_LDADD = $(LDADD)
texture_DEPENDENCIES = ../src/libemilia_pin.a \
	../addon/libemilia_addon.a ../base/libemilia_base.a
am_thread_OBJECTS = thread.$(OBJEXT)
thread_OBJECTS = $(am_thread_OBJECTS)
thread_LDADD = $(LDADD)
thread_DEPENDENCIES = ../src/libemilia_pin.a \
	../addon/libemilia_addon.a ../base/libemilia_base.a
am_trans_OBJECTS = trans.$(OBJEXT)
trans_OBJECTS = $(am_trans_OBJECTS)
trans_LDADD = $(LDADD)
trans_DEPENDENCIES = ../src/libemilia_pin.a ../addon/libemilia_addon.a \
	../base/libemilia_base.a
am_unittest_OBJECTS = unittest.$(OBJEXT)
unittest_OBJECTS = $(am_unittest_OBJECTS)
unittest_LDADD = $(LDADD)
unittest_DEPENDENCIES = ../src/libemilia_pin.a \
	../addon/libemilia_addon.a ../base/libemilia_base.a
unittest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(unittest_LDFLAGS) $(LDFLAGS) -o $@
am_varray_OBJECTS = varray.$(OBJEXT)
varray_OBJECTS = $(am_varray_OBJECTS)
varray_LDADD = $(LDADD)
varray_DEPENDENCIES = ../src/libemilia_pin.a \
	../addon/libemilia_addon.a ../base/libemilia_base.a
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/libltdl/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libModuleTest_la_SOURCES) $(billboard_SOURCES) \
	$(collision_SOURCES) $(explode_SOURCES) $(font_SOURCES) \
	$(joy_SOURCES) $(light_SOURCES) $(load_SOURCES) \
	$(math_SOURCES) $(menu_SOURCES) $(misc_SOURCES) \
	$(scale_SOURCES) $(signal_SOURCES) $(simple_SOURCES) \
	$(sound_SOURCES) $(texture_SOURCES) $(thread_SOURCES) \
	$(trans_SOURCES) $(unittest_SOURCES) $(varray_SOURCES)
DIST_SOURCES = $(libModuleTest_la_SOURCES) $(billboard_SOURCES) \
	$(collision_SOURCES) $(explode_SOURCES) $(font_SOURCES) \
	$(joy_SOURCES) $(light_SOURCES) $(load_SOURCES) \
	$(math_SOURCES) $(menu_SOURCES) $(misc_SOURCES) \
	$(scale_SOURCES) $(signal_SOURCES) $(simple_SOURCES) \
	$(sound_SOURCES) $(texture_SOURCES) $(thread_SOURCES) \
	$(trans_SOURCES) $(unittest_SOURCES) $(varray_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /tmp/tmp-rzr.tmp/var/lib/contrib.sh.dir/pinball/pinball/libltdl/config/missing --run aclocal-1.11
ALLEGRO_CFLAGS = 
ALLEGRO_CONFIG = 
ALLEGRO_LIBS = 
AMTAR = ${SHELL} /tmp/tmp-rzr.tmp/var/lib/contrib.sh.dir/pinball/pinball/libltdl/config/missing --run tar
AR = ar
ARGZ_H = 
AUTOCONF = ${SHELL} /tmp/tmp-rzr.tmp/var/lib/contrib.sh.dir/pinball/pinball/libltdl/config/missing --run autoconf
AUTOHEADER = ${SHELL} /tmp/tmp-rzr.tmp/var/lib/contrib.sh.dir/pinball/pinball/libltdl/config/missing --run autoheader
AUTOMAKE = ${SHELL} /tmp/tmp-rzr.tmp/var/lib/contrib.sh.dir/pinball/pinball/libltdl/config/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=none
CFLAGS = -g -O2  -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT
CPP = gcc -E
CPPFLAGS =  -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT
CPPUNIT_CFLAGS = 
CPPUNIT_CONFIG = 
CPPUNIT_LIBS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=none
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EM_BUILD_ROOT = /
EM_DATADIR = /usr/share/games/pinball
EM_HIGHSCORE_DIR = /var/games/pinball
EM_LIBDIR = ${exec_prefix}/lib/pinball
EXEEXT = 
FGREP = /bin/grep -F
GL_LIBS =  -lSM -lICE   -lGL -lGLU
GREP = /bin/grep
INCLTDL = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS = 
LIBADD_DL = -ldl 
LIBADD_DLD_LINK = 
LIBADD_DLOPEN = -ldl
LIBADD_SHL_LOAD = 
LIBLTDL = -lltdl
LIBOBJS = 
LIBS =  -lSM -lICE   -lGL -lGLU -ldl  -L/usr/lib -lSDL -lSDL_image -lSDL_mixer
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTDLDEPS = 
LTDLINCL = 
LTDLOPEN = libltdl
LTLIBOBJS = 
LT_CONFIG_H = pinconfig.h
LT_DLLOADERS =  libltdl/dlopen.la
LT_DLPREOPEN = -dlpreopen libltdl/dlopen.la 
MAKEINFO = ${SHELL} /tmp/tmp-rzr.tmp/var/lib/contrib.sh.dir/pinball/pinball/libltdl/config/missing --run makeinfo
MANIFEST_TOOL = :
MATHLIB = -lm
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = pinball
PACKAGE_BUGREPORT = pinball.sf.net
PACKAGE_NAME = pinball
PACKAGE_STRING = pinball 0.0.0
PACKAGE_TARNAME = pinball
PACKAGE_URL = 
PACKAGE_VERSION = 0.0.0
PATH_SEPARATOR = :
RANLIB = ranlib
SDL_CFLAGS = -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -L/usr/lib -lSDL
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.0.0
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
abs_builddir = /tmp/tmp-rzr.tmp/var/lib/contrib.sh.dir/pinball/pinball/test
abs_srcdir = /tmp/tmp-rzr.tmp/var/lib/contrib.sh.dir/pinball/pinball/test
abs_top_builddir = /tmp/tmp-rzr.tmp/var/lib/contrib.sh.dir/pinball/pinball
abs_top_srcdir = /tmp/tmp-rzr.tmp/var/lib/contrib.sh.dir/pinball/pinball
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = /usr/games
build = i486-pc-linux-gnu
build_alias = i486-linux-gnu
build_cpu = i486
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = /usr/share/games
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr
host = i486-pc-linux-gnu
host_alias = 
host_cpu = i486
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${prefix}/share/info
install_sh = ${SHELL} /tmp/tmp-rzr.tmp/var/lib/contrib.sh.dir/pinball/pinball/libltdl/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${prefix}/lib/pinball
localedir = ${datarootdir}/locale
localstatedir = /var
ltdl_LIBOBJS =  lt__strl.o
ltdl_LTLIBOBJS =  lt__strl.lo
mandir = ${prefix}/share/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  libltdl
sys_symbol_underscore = no
sysconfdir = /etc
target = i486-pc-linux-gnu
target_alias = 
target_cpu = i486
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AUTOMAKE_OPTIONS = gnu
testlibdir = $(EM_LIBDIR)
testdatadir = $(pkgdatadir)
INCLUDES = -I../base -I../addon -I../src
LDADD = ../src/libemilia_pin.a ../addon/libemilia_addon.a ../base/libemilia_base.a -lltdl
testlib_LTLIBRARIES = libModuleTest.la
libModuleTest_la_LDFLAGS = -module
libModuleTest_la_SOURCES = moduletest.cpp
unittest_LDFLAGS = -export-dynamic
load_LDFLAGS = -export-dynamic
billboard_SOURCES = billboard.cpp
collision_SOURCES = collision.cpp
explode_SOURCES = explode.cpp
font_SOURCES = font.cpp
joy_SOURCES = joy.cpp
light_SOURCES = light.cpp
load_SOURCES = load.cpp
math_SOURCES = math.cpp
menu_SOURCES = menu.cpp
misc_SOURCES = misc.cpp
scale_SOURCES = scale.cpp
signal_SOURCES = signal.cpp
simple_SOURCES = simple.cpp
sound_SOURCES = sound.cpp
texture_SOURCES = texture.cpp
thread_SOURCES = thread.cpp
trans_SOURCES = trans.cpp
unittest_SOURCES = unittest.cpp
varray_SOURCES = varray.cpp
EXTRA_DIST = \
module.txt \
script.txt \
token.txt

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-testlibLTLIBRARIES: $(testlib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(testlibdir)" || $(MKDIR_P) "$(DESTDIR)$(testlibdir)"
	@list='$(testlib_LTLIBRARIES)'; test -n "$(testlibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(testlibdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(testlibdir)"; \
	}

uninstall-testlibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(testlib_LTLIBRARIES)'; test -n "$(testlibdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(testlibdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(testlibdir)/$$f"; \
	done

clean-testlibLTLIBRARIES:
	-test -z "$(testlib_LTLIBRARIES)" || rm -f $(testlib_LTLIBRARIES)
	@list='$(testlib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libModuleTest.la: $(libModuleTest_la_OBJECTS) $(libModuleTest_la_DEPENDENCIES) 
	$(libModuleTest_la_LINK) -rpath $(testlibdir) $(libModuleTest_la_OBJECTS) $(libModuleTest_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
billboard$(EXEEXT): $(billboard_OBJECTS) $(billboard_DEPENDENCIES) 
	@rm -f billboard$(EXEEXT)
	$(CXXLINK) $(billboard_OBJECTS) $(billboard_LDADD) $(LIBS)
collision$(EXEEXT): $(collision_OBJECTS) $(collision_DEPENDENCIES) 
	@rm -f collision$(EXEEXT)
	$(CXXLINK) $(collision_OBJECTS) $(collision_LDADD) $(LIBS)
explode$(EXEEXT): $(explode_OBJECTS) $(explode_DEPENDENCIES) 
	@rm -f explode$(EXEEXT)
	$(CXXLINK) $(explode_OBJECTS) $(explode_LDADD) $(LIBS)
font$(EXEEXT): $(font_OBJECTS) $(font_DEPENDENCIES) 
	@rm -f font$(EXEEXT)
	$(CXXLINK) $(font_OBJECTS) $(font_LDADD) $(LIBS)
joy$(EXEEXT): $(joy_OBJECTS) $(joy_DEPENDENCIES) 
	@rm -f joy$(EXEEXT)
	$(CXXLINK) $(joy_OBJECTS) $(joy_LDADD) $(LIBS)
light$(EXEEXT): $(light_OBJECTS) $(light_DEPENDENCIES) 
	@rm -f light$(EXEEXT)
	$(CXXLINK) $(light_OBJECTS) $(light_LDADD) $(LIBS)
load$(EXEEXT): $(load_OBJECTS) $(load_DEPENDENCIES) 
	@rm -f load$(EXEEXT)
	$(load_LINK) $(load_OBJECTS) $(load_LDADD) $(LIBS)
math$(EXEEXT): $(math_OBJECTS) $(math_DEPENDENCIES) 
	@rm -f math$(EXEEXT)
	$(CXXLINK) $(math_OBJECTS) $(math_LDADD) $(LIBS)
menu$(EXEEXT): $(menu_OBJECTS) $(menu_DEPENDENCIES) 
	@rm -f menu$(EXEEXT)
	$(CXXLINK) $(menu_OBJECTS) $(menu_LDADD) $(LIBS)
misc$(EXEEXT): $(misc_OBJECTS) $(misc_DEPENDENCIES) 
	@rm -f misc$(EXEEXT)
	$(CXXLINK) $(misc_OBJECTS) $(misc_LDADD) $(LIBS)
scale$(EXEEXT): $(scale_OBJECTS) $(scale_DEPENDENCIES) 
	@rm -f scale$(EXEEXT)
	$(CXXLINK) $(scale_OBJECTS) $(scale_LDADD) $(LIBS)
signal$(EXEEXT): $(signal_OBJECTS) $(signal_DEPENDENCIES) 
	@rm -f signal$(EXEEXT)
	$(CXXLINK) $(signal_OBJECTS) $(signal_LDADD) $(LIBS)
simple$(EXEEXT): $(simple_OBJECTS) $(simple_DEPENDENCIES) 
	@rm -f simple$(EXEEXT)
	$(CXXLINK) $(simple_OBJECTS) $(simple_LDADD) $(LIBS)
sound$(EXEEXT): $(sound_OBJECTS) $(sound_DEPENDENCIES) 
	@rm -f sound$(EXEEXT)
	$(CXXLINK) $(sound_OBJECTS) $(sound_LDADD) $(LIBS)
texture$(EXEEXT): $(texture_OBJECTS) $(texture_DEPENDENCIES) 
	@rm -f texture$(EXEEXT)
	$(CXXLINK) $(texture_OBJECTS) $(texture_LDADD) $(LIBS)
thread$(EXEEXT): $(thread_OBJECTS) $(thread_DEPENDENCIES) 
	@rm -f thread$(EXEEXT)
	$(CXXLINK) $(thread_OBJECTS) $(thread_LDADD) $(LIBS)
trans$(EXEEXT): $(trans_OBJECTS) $(trans_DEPENDENCIES) 
	@rm -f trans$(EXEEXT)
	$(CXXLINK) $(trans_OBJECTS) $(trans_LDADD) $(LIBS)
unittest$(EXEEXT): $(unittest_OBJECTS) $(unittest_DEPENDENCIES) 
	@rm -f unittest$(EXEEXT)
	$(unittest_LINK) $(unittest_OBJECTS) $(unittest_LDADD) $(LIBS)
varray$(EXEEXT): $(varray_OBJECTS) $(varray_DEPENDENCIES) 
	@rm -f varray$(EXEEXT)
	$(CXXLINK) $(varray_OBJECTS) $(varray_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/billboard.Po
#include ./$(DEPDIR)/collision.Po
#include ./$(DEPDIR)/explode.Po
#include ./$(DEPDIR)/font.Po
#include ./$(DEPDIR)/joy.Po
#include ./$(DEPDIR)/light.Po
#include ./$(DEPDIR)/load.Po
#include ./$(DEPDIR)/math.Po
#include ./$(DEPDIR)/menu.Po
#include ./$(DEPDIR)/misc.Po
#include ./$(DEPDIR)/moduletest.Plo
#include ./$(DEPDIR)/scale.Po
#include ./$(DEPDIR)/signal.Po
#include ./$(DEPDIR)/simple.Po
#include ./$(DEPDIR)/sound.Po
#include ./$(DEPDIR)/texture.Po
#include ./$(DEPDIR)/thread.Po
#include ./$(DEPDIR)/trans.Po
#include ./$(DEPDIR)/unittest.Po
#include ./$(DEPDIR)/varray.Po

.cpp.o:
#	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
#	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
#	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
#	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(testlibdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	clean-testlibLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-testlibLTLIBRARIES

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-testlibLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstPROGRAMS clean-testlibLTLIBRARIES \
	ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip \
	install-testlibLTLIBRARIES installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-testlibLTLIBRARIES

dnl noinst_PROGRAMS = unittest

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
